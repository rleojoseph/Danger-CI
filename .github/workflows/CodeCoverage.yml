
# name: CI

# on: 
#   pull_request

# jobs:
#   build:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: Build
#         run: swift build

#       - name: Test
#         run: swift test --enable-code-coverage

#       - name: Run danger
#         run: |
#           npm install -g danger
#           bundle exec danger
#         env:
#           GITHUB_TOKEN: ${{ secrets.LEO }}
#           DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      # - name: Danger
      #   run: danger-swift ci
        

# name: CI

# on:
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: "Run Danger"
#     steps:
#       - uses: actions/checkout@v2
#       - name: Danger
#         uses: docker://ghcr.io/danger/danger-swift:3.7.2
#         with:
#             args: --failOnErrors --no-publish-check
#         env:
          # GITHUB_TOKEN: ${{ secrets.LEO }}
          # DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}


# name: ðŸš§ Danger

# on:
#   pull_request:
#     types: [opened, reopened, edited, synchronize]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Ruby 2.6.3
#       uses: actions/setup-ruby@v1
#       with:
#         ruby-version: '2.6'
#     - uses: actions/cache@v1
#       with:
#         path: vendor/bundle
#         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-gems-
#     - name: Bundle install
#       run: |
#         gem install bundler
#         bundle config path vendor/bundle
#         bundle install --jobs 4 --retry 3
#     - name: Run danger
#       run: |
#         bundle exec danger
#       env:
#         DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}



# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: "Run Danger"
#         uses: danger/swift@3.3.0
#         with:
#             args: --failOnErrors --no-publish-check
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
