name: CI

on: 
  pull_request

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - name: Build
        run: swift build

      - name: Test
        run: swift test

      - name: Run danger
        run: |
          npm install -g danger
          # brew install danger/tap/danger-swift
          bundle exec danger
        env:
          GITHUB_TOKEN: ${{ secrets.LEO }}
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}

      # - name: Danger
      #   run: danger-swift ci
        

# name: CI

# on:
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: "Run Danger"
#     steps:
#       - uses: actions/checkout@v2
#       - name: Danger
#         uses: docker://ghcr.io/danger/danger-swift:3.7.2
#         with:
#             args: --failOnErrors --no-publish-check
#         env:
          # GITHUB_TOKEN: ${{ secrets.LEO }}
          # DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}


# name: ðŸš§ Danger

# on:
#   pull_request:
#     types: [opened, reopened, edited, synchronize]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Ruby 2.6.3
#       uses: actions/setup-ruby@v1
#       with:
#         ruby-version: '2.6'
#     - uses: actions/cache@v1
#       with:
#         path: vendor/bundle
#         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
#         restore-keys: |
#           ${{ runner.os }}-gems-
#     - name: Bundle install
#       run: |
#         gem install bundler
#         bundle config path vendor/bundle
#         bundle install --jobs 4 --retry 3
#     - name: Run danger
#       run: |
#         bundle exec danger
#       env:
#         DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
